1.  correct : getline(cin , string_name)
    not correct : cin>>string_name
    why ? cuz incorrect one will not read  words or characters after space.


2. always use string header when working with strings

3.  Comparing two strings : 
    if(var1.compare(var2)== 0){
    cout<<"strings are same";
    }
    else{
    cout<<"not same";
    }


4.  Swap of two strings : there are two methods to do so
    i . inbuilt function :
          var1.swap(var2);
          cout<<"var 1: "<<var1;
          cout<<"var2 :"<<var2;

    ii. similar way using third variable. named as temp = v1 , v1 = v2 , v2 =temp . print v1 and v2.


5. reverse of strings Yuvanshi = ihsnavuY
              for(int i= var1.size();i>=0;i--){
              cout<<var1[i];
              }


6. to remove or replace vowels from string simply replace them with empty string or same to replace particular word
       for(int i =0 ; i<=var1.size();i++){
       if (var1[i] == 'a' || var1[i] == 'e' || var1[i] == 'i' || var1[i] == 'o' || var1[i] == 'u'){
       replacing vowel with empty space
       var1[i] = ' ';
       }
       cout<<"after removing vowel: "<<var1<<endl;


  7. to replace a particular word using inbuit function

        cout<<"enter a string to find: "<<endl;
	      getline(cin, var2);
        cout<<"enter a string to replace:  "<<endl;
	      getline(cin, var3);
        while(var1.find(var2 (or word to find))!= string::npos){
        var1.replace(var1.find(var2),var2.size(),"word to replace")

  NOTE : NPOS WILL TRAVERSE THROUGH ALL THE STRING TILL THE END
}
     while(var1.find(var2)!= string::npos){
     var1.replace(var1.find(var2),var2.size(),var3);
     }
     cout<<" modified string:   "<<var1;



8. SOME SPECIAL POINTS:
 "": double quotes for sequence of character
 '' : single quotes for single character
'' : to be empty use space


