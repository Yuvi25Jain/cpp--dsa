#include <iostream>
using namespace std;
//example 1 : factorial of a number
// int fact(int n){
//     if(n == 0 || n==1){
//         return 1;
//     }
//     else{
//        return n*fact(n-1);
//     }
// }
// int main()
// {
//     int n;
//     cout<<"enter a  number: "<<endl;
//     cin>>n;
//     cout<<"factorial of given number is: "<< fact(n);

//   return 0;
// }

//example 2 : fibonanci series :

int fib(int n){
    if(n<=1){
        return n;
    }
    else{
        return fib(n-1)+ fib(n-2);
    }
}

int main(){
    int n;
    cout<<"enter number of terms: "<<endl;
    cin>>n;
    cout<<"FIbonnaci series: "<<endl;
    for(int i =0 ; i<n ; i++){
        cout<<fib(i)<<" ";
    }
    return 0;

}

/*Advantages of recursion: 
1. make code cleaner and shorter
2. advanced data structure like graph and trees use it

diadvantage:
1. more use of memory
2. difficult to analyse code*/
